version: 2

jobs:
  build:
    docker:
      - image: circleci/openjdk:8u171-jdk-node-browsers
    resource_class: xlarge
    environment:
      GRADLE_OPTS: -Dorg.gradle.console=plain -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false
      _JAVA_OPTIONS: "-Xmx512M -XX:+HeapDumpOnOutOfMemoryError -verbose:gc -XX:+PrintGC -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:-TraceClassUnloading -Xloggc:build-%t-%p.gc.log"
      TERM: dumb

    steps:
      - setup_remote_docker
      - run: sudo wget --retry-connrefused --waitretry=1 --read-timeout 20 --timeout 15 -t 10 -q -O /usr/local/bin/docker-compose https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m`
      - run: sudo chmod +x /usr/local/bin/docker-compose
      - run: docker info >/dev/null 2>&1 || sudo service docker start
      - checkout
      - run: git tag -l | xargs git tag -d && git fetch -t # ensure all tags are fetched and up-to-date
      - run:
          command: ./scripts/circle-ci/pull-all-images.sh
          background: true
      - run:
          command: ./scripts/circle-ci/stop-services.sh
          background: true

    dependencies:
      pre:
        - ./scripts/circle-ci/download-moreutils.sh
      override:
        - ./scripts/time-cmd.sh ./gradlew --profile --parallel resolveConfigurations
        - scripts/circle-ci/pr-changelog-status-check.sh

    test:
      pre:
        - ./scripts/circle-ci/track-memory-usage.sh:
            background: true
            parallel: true
      override:
        - ./scripts/time-cmd.sh ./scripts/circle-ci/run-circle-tests.sh:
            parallel: true
            timeout: 600
      post:
        - ./scripts/time-cmd.sh ./scripts/circle-ci/ensure-repo-clean.sh
        - mkdir -p $CIRCLE_TEST_REPORTS/junit/:
            parallel: true
        - find . -type f -regex ".*/build/test-results/TEST-.*\.xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;:
            parallel: true
        - mkdir -p $CIRCLE_ARTIFACTS/checkstyle $CIRCLE_ARTIFACTS/findbugs:
            parallel: true
        - "if [ -d docs/build/html ]; then cp -r docs/build/html $CIRCLE_ARTIFACTS/docs; fi":
            parallel: true
        - find . -type d -regex ".*/build/reports/checkstyle" | sed 's#\./\(\(.*\)/build/reports/checkstyle\)#rsync -uav \1/ $CIRCLE_ARTIFACTS/checkstyle/\2#' | bash:
            parallel: true
        - find . -type d -regex ".*/build/reports/findbugs" | sed 's#\./\(\(.*\)/build/reports/findbugs\)#rsync -uav \1/ $CIRCLE_ARTIFACTS/findbugs/\2#' | bash:
            parallel: true
        - rsync -uav "build/reports/profile" "$CIRCLE_ARTIFACTS/":
            parallel: true
        - mkdir -p $CIRCLE_ARTIFACTS/heapdumps:
            parallel: true
        - find . -type f -name "*.hprof" -o -name "*.gc.log" -exec cp {} $CIRCLE_ARTIFACTS/heapdumps \;:
            parallel: true

    deployment:
      publish-docs:
        branch: develop
        owner: atlasdb
        commands:
          - ./scripts/circle-ci/publish-github-page.sh                                    # This command publishes the external docs.
          - curl -s --fail $DOCS_URL | bash -s -- -r docs/requirements.txt $CIRCLE_BRANCH # This command publishes the internal docs.
      bintray:
        tag: /[0-9]+(\.[0-9]+){2}(-alpha|-beta|-rc[0-9]+)?(\+[0-9]{3})?/
        owner: atlasdb # Use 'atlasdb' for publishing from internal circle and 'palantir' for publishing from external circle
        commands:
          - ./gradlew bintrayUpload -x check

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            # CircleCI2 will ignore tags without this. https://circleci.com/docs/2.0/workflows/#git-tag-job-execution
            tags:
              only: /.*/
